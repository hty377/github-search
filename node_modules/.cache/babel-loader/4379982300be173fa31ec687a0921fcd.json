{"ast":null,"code":"import _slicedToArray from\"/Users/atian/Desktop/github-search/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState}from\"react\";import{SearchBarWrapper,Input,Button}from\"./Styled\";var SearchBar=function SearchBar(_ref){var onSearch=_ref.onSearch;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),userName=_useState2[0],setUserName=_useState2[1];var onChangeHandle=function onChangeHandle(e){setUserName(e.target.value);};return/*#__PURE__*/_jsxs(SearchBarWrapper,{children:[/*#__PURE__*/_jsx(Input,{type:\"text\",placeholder:\"typing username...\",value:userName,onChange:onChangeHandle}),/*#__PURE__*/_jsx(Button,{type:\"submit\",onClick:function onClick(){return onSearch(userName);},children:\"search\"})]});};export default SearchBar;","map":{"version":3,"sources":["/Users/atian/Desktop/github-search/src/components/SearchBar.js"],"names":["React","useState","SearchBarWrapper","Input","Button","SearchBar","onSearch","userName","setUserName","onChangeHandle","e","target","value"],"mappings":"iPAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAAQC,gBAAR,CAA0BC,KAA1B,CAAgCC,MAAhC,KAA6C,UAA7C,CAGA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,eACAL,QAAQ,CAAC,EAAD,CADR,wCACzBM,QADyB,eACfC,WADe,eAEhC,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAC,CAAC,CAAI,CAC1BF,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX,CACD,CAFD,CAIA,mBACE,MAAC,gBAAD,yBACE,KAAC,KAAD,EACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,oBAFd,CAGE,KAAK,CAAEL,QAHT,CAIE,QAAQ,CAAEE,cAJZ,EADF,cAQE,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAE,yBAAMH,CAAAA,QAAQ,CAACC,QAAD,CAAd,EAA/B,oBARF,GADF,CAYD,CAlBH,CAoBE,cAAeF,CAAAA,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {SearchBarWrapper, Input,Button} from \"./Styled\";\n\n\nconst SearchBar = ({ onSearch }) => {\n    const [userName, setUserName] = useState(\"\");\n    const onChangeHandle = e => {\n      setUserName(e.target.value);\n    }\n\n    return (\n      <SearchBarWrapper >\n        <Input\n          type=\"text\"\n          placeholder=\"typing username...\"\n          value={userName}\n          onChange={onChangeHandle}\n        />\n        \n        <Button type='submit' onClick={() => onSearch(userName)} >search</Button>\n      </SearchBarWrapper>\n    );\n  };\n  \n  export default SearchBar;"]},"metadata":{},"sourceType":"module"}