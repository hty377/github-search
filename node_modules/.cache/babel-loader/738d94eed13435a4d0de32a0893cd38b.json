{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/atian/Desktop/github-search/src/components/List.js\";\nimport React from \"react\";\nimport ListItem from \"./ListItem\";\nimport ErrorHandler from \"./ErrorHandler\";\nimport { ListWrapper, Button, Total } from \"./Styled\";\n\nconst List = ({\n  data,\n  total,\n  user,\n  nextPage,\n  hasNextPage\n}) => {\n  return /*#__PURE__*/_jsxDEV(ListWrapper, {\n    children: data.length === 0 ? /*#__PURE__*/_jsxDEV(ErrorHandler, {\n      error: \"No repositories found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Total, {\n        children: [\"There are \", total, \" repositories from \\\"\", user, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), data.map((repo, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        repo: repo.node\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this)), hasNextPage && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"previous page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          onClick: () => nextPage(),\n          children: \"next page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/atian/Desktop/github-search/src/components/List.js"],"names":["React","ListItem","ErrorHandler","ListWrapper","Button","Total","List","data","total","user","nextPage","hasNextPage","length","map","repo","index","node"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,WAAR,EAAqBC,MAArB,EAA6BC,KAA7B,QAAyC,UAAzC;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAOC,EAAAA,KAAP;AAAcC,EAAAA,IAAd;AAAmBC,EAAAA,QAAnB;AAA6BC,EAAAA;AAA7B,CAAD,KAAgD;AAC3D,sBACE,QAAC,WAAD;AAAA,cACGJ,IAAI,CAACK,MAAL,KAAgB,CAAhB,gBACC,QAAC,YAAD;AAAc,MAAA,KAAK,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAA,8BACE,QAAC,KAAD;AAAA,iCAAkBJ,KAAlB,2BAA6CC,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGF,IAAI,CAACM,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,kBACR,QAAC,QAAD;AAAsB,QAAA,IAAI,EAAED,IAAI,CAACE;AAAjC,SAAeD,KAAf;AAAA;AAAA;AAAA;AAAA,cADD,CAFH,EAKGJ,WAAW,iBACV;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAE,MAAMD,QAAQ,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CArBD;;KAAMJ,I;AAuBN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\n\nimport ListItem from \"./ListItem\";\nimport ErrorHandler from \"./ErrorHandler\";\nimport {ListWrapper, Button, Total} from \"./Styled\";\n\nconst List = ({ data,total, user,nextPage, hasNextPage }) => {\n  return (\n    <ListWrapper >\n      {data.length === 0 ? (\n        <ErrorHandler error=\"No repositories found\"></ErrorHandler>\n      ) : (\n        <div>\n          <Total>There are {total} repositories from \"{user}\"</Total>\n          {data.map((repo, index) => (\n            <ListItem key={index} repo={repo.node} />\n          ))}\n          {hasNextPage && (\n            <div>\n              <Button type=\"submit\" >previous page</Button>\n              <Button type=\"submit\" onClick={() => nextPage()} >next page</Button>\n            </div>\n          )}  \n        </div>\n      )}\n    </ListWrapper>\n  );\n};\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}