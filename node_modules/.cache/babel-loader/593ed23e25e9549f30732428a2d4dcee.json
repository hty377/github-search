{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/atian/Desktop/github-search/src/components/SearchPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport RepositoryList from \"./repository/RepositoryList\";\nimport { GET_LIST } from \"../graphql/graphql\";\nimport Loading from \"./loading/Loading\";\nimport SearchInput from \"./search/SearchInput\";\nimport ErrorMessage from \"./error/ErrorMessage\";\nconst GET_REPOSITORIES_LIST = gql`\n  query getRepositoryQuery(\n    $repoNameString: String!\n    $after: String\n    $limit: Int!\n  ) {\n    search(\n      query: $repoNameString\n      first: $limit\n      after: $after\n      type: REPOSITORY\n    ) {\n      pageInfo {\n        startCursor\n        hasNextPage\n        endCursor\n      }\n      edges {\n        node {\n          ... on Repository {\n            name\n            url\n            description\n            languages(first: 3) {\n              nodes {\n                name\n              }\n            }\n            stargazers {\n              totalCount\n            }\n            owner {\n              login\n            }\n            updatedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst SearchPage = () => {\n  _s();\n\n  const [searchText, setSearchText] = useState(\"elastic\");\n  const {\n    loading,\n    error,\n    data,\n    fetchMore\n  } = useQuery(GET_REPOSITORIES_LIST, {\n    variables: {\n      repoNameString: searchText,\n      limit: 10\n    }\n  });\n\n  const handleSearch = str => {\n    setSearchText(str);\n    fetchMore({\n      variables: {\n        repoNameString: str,\n        limit: 10\n      },\n      updateQuery: (prev, {\n        fetchMoreResult\n      }) => {\n        if (!fetchMoreResult) return prev;\n        return fetchMoreResult;\n      }\n    });\n  };\n\n  const handleMore = () => {\n    fetchMore({\n      variables: {\n        repoNameString: searchText,\n        after: data.search.pageInfo.endCursor,\n        limit: 10\n      },\n      updateQuery: (prev, {\n        fetchMoreResult\n      }) => {\n        if (!fetchMoreResult) return prev;\n        return Object.assign({}, prev, { ...fetchMoreResult,\n          search: { ...fetchMoreResult.search,\n            edges: [...prev.search.edges, ...fetchMoreResult.search.edges]\n          }\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"repository-page\",\n    children: [loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this), !loading && /*#__PURE__*/_jsxDEV(SearchInput, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 20\n    }, this), data && /*#__PURE__*/_jsxDEV(RepositoryList, {\n      list: data.search.edges,\n      onLoadMore: handleMore,\n      hasNextPage: data.search.pageInfo.hasNextPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchPage, \"fhh4lN9uI/rKKJuRidzdplLqBKM=\", false, function () {\n  return [useQuery];\n});\n\n_c = SearchPage;\nexport default SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["/Users/atian/Desktop/github-search/src/components/SearchPage.js"],"names":["React","useState","gql","useQuery","RepositoryList","GET_LIST","Loading","SearchInput","ErrorMessage","GET_REPOSITORIES_LIST","SearchPage","searchText","setSearchText","loading","error","data","fetchMore","variables","repoNameString","limit","handleSearch","str","updateQuery","prev","fetchMoreResult","handleMore","after","search","pageInfo","endCursor","Object","assign","edges","hasNextPage"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport RepositoryList from \"./repository/RepositoryList\";\nimport {GET_LIST} from \"../graphql/graphql\";\nimport Loading from \"./loading/Loading\";\nimport SearchInput from \"./search/SearchInput\";\nimport ErrorMessage from \"./error/ErrorMessage\";\n\nconst GET_REPOSITORIES_LIST = gql`\n  query getRepositoryQuery(\n    $repoNameString: String!\n    $after: String\n    $limit: Int!\n  ) {\n    search(\n      query: $repoNameString\n      first: $limit\n      after: $after\n      type: REPOSITORY\n    ) {\n      pageInfo {\n        startCursor\n        hasNextPage\n        endCursor\n      }\n      edges {\n        node {\n          ... on Repository {\n            name\n            url\n            description\n            languages(first: 3) {\n              nodes {\n                name\n              }\n            }\n            stargazers {\n              totalCount\n            }\n            owner {\n              login\n            }\n            updatedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst SearchPage = () => {\n  const [searchText, setSearchText] = useState(\"elastic\");\n  const { loading, error, data, fetchMore } = useQuery(GET_REPOSITORIES_LIST, {\n    variables: { repoNameString: searchText, limit: 10 },\n  });\n\n  const handleSearch = (str) => {\n    setSearchText(str);\n    fetchMore({\n      variables: {\n        repoNameString: str,\n        limit: 10,\n      },\n      updateQuery: (prev, { fetchMoreResult }) => {\n        if (!fetchMoreResult) return prev;\n        return fetchMoreResult;\n      },\n    });\n  };\n\n  const handleMore = () => {\n    fetchMore({\n      variables: {\n        repoNameString: searchText,\n        after: data.search.pageInfo.endCursor,\n        limit: 10,\n      },\n      updateQuery: (prev, { fetchMoreResult }) => {\n        if (!fetchMoreResult) return prev;\n        return Object.assign({}, prev, {\n          ...fetchMoreResult,\n          search: {\n            ...fetchMoreResult.search,\n            edges: [...prev.search.edges, ...fetchMoreResult.search.edges],\n          },\n        });\n      },\n    });\n  };\n\n  return (\n    <div className=\"repository-page\">\n      {loading && <Loading />}\n      {error && <ErrorMessage error={error} />}\n      {!loading && <SearchInput onSearch={handleSearch} />}\n      {data && (\n        <RepositoryList\n          list={data.search.edges}\n          onLoadMore={handleMore}\n          hasNextPage={data.search.pageInfo.hasNextPage}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default SearchPage;\n"]},"metadata":{},"sourceType":"module"}