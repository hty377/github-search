{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/atian/Desktop/github-search/src/components/SearchPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport List from \"./List\";\nimport SearchBar from \"./SearchBar\";\nimport ErrorHandler from \"./ErrorHandler\";\nconst GET_LIST = gql`\n  query($username: String! $cursor: String ) {\n    user( login: $username) {\n      repositories(first: 10, after: $cursor) {\n        totalCount\n        edges{\n          node {\n            ... on Repository {\n              name\n              url\n              description\n              updatedAt\n            }\n          }  \n        }\n        pageInfo {\n          hasNextPage\n          endCursor\n        }\n      }\n    }\n  }\n`;\n\nconst SearchPage = () => {\n  _s();\n\n  const [userName, setUserName] = useState(\"\");\n  const {\n    loading,\n    error,\n    data,\n    fetchMore\n  } = useQuery(GET_LIST, {\n    variables: {\n      username: userName\n    }\n  });\n\n  const handleSearch = str => {\n    setUserName(str);\n    fetchMore({\n      variables: {\n        username: str\n      },\n      updateQuery: (prev, {\n        fetchMoreResult\n      }) => {\n        if (!fetchMoreResult) return prev;\n        return fetchMoreResult;\n      }\n    });\n  };\n\n  const handleNext = () => {\n    fetchMore({\n      variables: {\n        username: userName,\n        cursor: data.user.repositories.pageInfo.endCursor\n      },\n      updateQuery: (prev, {\n        fetchMoreResult\n      }) => {\n        if (!fetchMoreResult) return prev;\n        return Object.assign({}, prev, { ...fetchMoreResult,\n          user: { ...fetchMoreResult.user,\n            edges: [...prev.user.repositories.edges, ...fetchMoreResult.user.repositories.edges]\n          }\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorHandler, {\n      error: error.networkError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this), !loading && /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 20\n    }, this), data && /*#__PURE__*/_jsxDEV(List, {\n      data: data.user.repositories.edges,\n      total: data.user.repositories.totalCount,\n      user: userName,\n      more: handleNext,\n      hasNextPage: data.user.repositories.pageInfo.hasNextPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchPage, \"k6tZtTFkFY/LuAAD7fnhDy4f3vo=\", false, function () {\n  return [useQuery];\n});\n\n_c = SearchPage;\nexport default SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["/Users/atian/Desktop/github-search/src/components/SearchPage.js"],"names":["React","useState","gql","useQuery","List","SearchBar","ErrorHandler","GET_LIST","SearchPage","userName","setUserName","loading","error","data","fetchMore","variables","username","handleSearch","str","updateQuery","prev","fetchMoreResult","handleNext","cursor","user","repositories","pageInfo","endCursor","Object","assign","edges","networkError","totalCount","hasNextPage"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport { gql, useQuery } from \"@apollo/client\";\n\nimport List from \"./List\";\nimport SearchBar from \"./SearchBar\";\nimport ErrorHandler from \"./ErrorHandler\";\n\nconst GET_LIST = gql`\n  query($username: String! $cursor: String ) {\n    user( login: $username) {\n      repositories(first: 10, after: $cursor) {\n        totalCount\n        edges{\n          node {\n            ... on Repository {\n              name\n              url\n              description\n              updatedAt\n            }\n          }  \n        }\n        pageInfo {\n          hasNextPage\n          endCursor\n        }\n      }\n    }\n  }\n`;\n\nconst SearchPage = () => {\n  const [userName, setUserName] = useState(\"\");\n  const { loading, error, data, fetchMore } = useQuery(GET_LIST, {\n    variables: { username: userName },\n  });\n\n  const handleSearch = (str) => {\n    setUserName(str);\n    fetchMore({\n      variables: {\n        username: str,\n      },\n      updateQuery: (prev, { fetchMoreResult }) => {\n        if (!fetchMoreResult) return prev;\n        return fetchMoreResult;\n      },\n    });\n  };\n\n  const handleNext = () => {\n    fetchMore({\n      variables: {\n        username: userName,\n        cursor: data.user.repositories.pageInfo.endCursor,\n      },\n      updateQuery: (prev, { fetchMoreResult }) => {\n        if (!fetchMoreResult) return prev;\n        return Object.assign({}, prev, {\n          ...fetchMoreResult,\n          user: {\n            ...fetchMoreResult.user,\n            edges: [...prev.user.repositories.edges, ...fetchMoreResult.user.repositories.edges],\n          },\n        });\n      },\n    });\n  };\n\n\n  return (\n    <div>\n      {error && <ErrorHandler error = {error.networkError}/> }\n      {!loading && <SearchBar onSearch={handleSearch} />}\n      {data  && \n        <List\n          data={data.user.repositories.edges}\n          total={data.user.repositories.totalCount}\n          user={userName}\n          more={handleNext}\n          hasNextPage={data.user.repositories.pageInfo.hasNextPage}\n        />\n      }\n    </div>\n  );\n};\n\nexport default SearchPage;\n"]},"metadata":{},"sourceType":"module"}