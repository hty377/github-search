{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/atian/Desktop/github-search/src/components/List.js\";\nimport React from \"react\";\nimport ErrorMessage from \"./error/ErrorMessage\";\nimport ListItem from \"./ListItem\";\nimport { ListWrapper } from \"./Styled\";\n\nconst List = ({\n  list\n}) => {\n  return /*#__PURE__*/_jsxDEV(ListWrapper, {\n    children: list.length === 0 ? /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      errorText: \"No repositories found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: list.map((repo, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        repository: repo.node\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this))\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/atian/Desktop/github-search/src/components/List.js"],"names":["React","ErrorMessage","ListItem","ListWrapper","List","list","length","map","repo","index","node"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,WAAR,QAA0B,UAA1B;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACzB,sBACE,QAAC,WAAD;AAAA,cACGA,IAAI,CAACC,MAAL,KAAgB,CAAhB,gBACC,QAAC,YAAD;AAAc,MAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAA,gBACGD,IAAI,CAACE,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,kBACR,QAAC,QAAD;AAAsB,QAAA,UAAU,EAAED,IAAI,CAACE;AAAvC,SAAeD,KAAf;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAfD;;KAAML,I;AAiBN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\n\nimport ErrorMessage from \"./error/ErrorMessage\";\nimport ListItem from \"./ListItem\";\nimport {ListWrapper} from \"./Styled\";\n\nconst List = ({ list }) => {\n  return (\n    <ListWrapper >\n      {list.length === 0 ? (\n        <ErrorMessage errorText=\"No repositories found.\" />\n      ) : (\n        <>\n          {list.map((repo, index) => (\n            <ListItem key={index} repository={repo.node} />\n          ))}\n          \n        </>\n      )}\n    </ListWrapper>\n  );\n};\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}