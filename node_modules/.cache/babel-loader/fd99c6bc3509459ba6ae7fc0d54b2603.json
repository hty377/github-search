{"ast":null,"code":"import _objectSpread from\"/Users/atian/Desktop/github-search/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/atian/Desktop/github-search/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/atian/Desktop/github-search/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  query($username: String! $cursor: String ) {\\n    user( login: $username) {\\n      repositories(first: 20, after: $cursor) {\\n        totalCount\\n        edges{\\n          node {\\n            ... on Repository {\\n              name\\n              url\\n              description\\n              updatedAt\\n            }\\n          }  \\n        }\\n        pageInfo {\\n          hasNextPage\\n          endCursor\\n        }\\n      }\\n    }\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState}from\"react\";import{gql,useQuery}from\"@apollo/client\";import List from\"./List\";import SearchBar from\"./SearchBar\";import ErrorHandler from\"./ErrorHandler\";var GET_LIST=gql(_templateObject());var SearchPage=function SearchPage(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),userName=_useState2[0],setUserName=_useState2[1];var _useQuery=useQuery(GET_LIST,{variables:{username:userName}}),data=_useQuery.data,fetchMore=_useQuery.fetchMore;var handleSearch=function handleSearch(str){setUserName(str);fetchMore({variables:{username:str},updateQuery:function updateQuery(prev,_ref){var fetchMoreResult=_ref.fetchMoreResult;if(!fetchMoreResult)return prev;return fetchMoreResult;}});};var handleMore=function handleMore(){fetchMore({variables:{username:userName,cursor:data.user.repositories.pageInfo.endCursor},updateQuery:function updateQuery(prev,_ref2){var fetchMoreResult=_ref2.fetchMoreResult;if(!fetchMoreResult)return prev;return Object.assign({},prev,_objectSpread({},fetchMoreResult));}});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(SearchBar,{onSearch:handleSearch}),data&&/*#__PURE__*/_jsx(List,{data:data.user.repositories.edges,total:data.user.repositories.totalCount,user:userName,more:handleMore,hasNextPage:data.user.repositories.pageInfo.hasNextPage})]});};export default SearchPage;","map":{"version":3,"sources":["/Users/atian/Desktop/github-search/src/components/SearchPage.js"],"names":["React","useState","gql","useQuery","List","SearchBar","ErrorHandler","GET_LIST","SearchPage","userName","setUserName","variables","username","data","fetchMore","handleSearch","str","updateQuery","prev","fetchMoreResult","handleMore","cursor","user","repositories","pageInfo","endCursor","Object","assign","edges","totalCount","hasNextPage"],"mappings":"snCAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,OAASC,GAAT,CAAcC,QAAd,KAA8B,gBAA9B,CAEA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAEA,GAAMC,CAAAA,QAAQ,CAAGL,GAAH,mBAAd,CAwBA,GAAMM,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,eACSP,QAAQ,CAAC,EAAD,CADjB,wCAChBQ,QADgB,eACNC,WADM,6BAEKP,QAAQ,CAACI,QAAD,CAAW,CAC7CI,SAAS,CAAE,CAAEC,QAAQ,CAAEH,QAAZ,CADkC,CAAX,CAFb,CAEfI,IAFe,WAEfA,IAFe,CAETC,SAFS,WAETA,SAFS,CAMvB,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,GAAD,CAAS,CAC5BN,WAAW,CAACM,GAAD,CAAX,CACAF,SAAS,CAAC,CACRH,SAAS,CAAE,CACTC,QAAQ,CAAEI,GADD,CADH,CAIRC,WAAW,CAAE,qBAACC,IAAD,MAA+B,IAAtBC,CAAAA,eAAsB,MAAtBA,eAAsB,CAC1C,GAAI,CAACA,eAAL,CAAsB,MAAOD,CAAAA,IAAP,CACtB,MAAOC,CAAAA,eAAP,CACD,CAPO,CAAD,CAAT,CASD,CAXD,CAaA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvBN,SAAS,CAAC,CACRH,SAAS,CAAE,CACTC,QAAQ,CAAEH,QADD,CAETY,MAAM,CAAER,IAAI,CAACS,IAAL,CAAUC,YAAV,CAAuBC,QAAvB,CAAgCC,SAF/B,CADH,CAKRR,WAAW,CAAE,qBAACC,IAAD,OAA+B,IAAtBC,CAAAA,eAAsB,OAAtBA,eAAsB,CAC1C,GAAI,CAACA,eAAL,CAAsB,MAAOD,CAAAA,IAAP,CACtB,MAAOQ,CAAAA,MAAM,CAACC,MAAP,CAAc,EAAd,CAAiBT,IAAjB,kBAA0BC,eAA1B,EAAP,CACD,CARO,CAAD,CAAT,CAUD,CAXD,CAcA,mBACE,oCACE,KAAC,SAAD,EAAW,QAAQ,CAAEJ,YAArB,EADF,CAEGF,IAAI,eACH,KAAC,IAAD,EACE,IAAI,CAAEA,IAAI,CAACS,IAAL,CAAUC,YAAV,CAAuBK,KAD/B,CAEE,KAAK,CAAEf,IAAI,CAACS,IAAL,CAAUC,YAAV,CAAuBM,UAFhC,CAGE,IAAI,CAAEpB,QAHR,CAIE,IAAI,CAAEW,UAJR,CAKE,WAAW,CAAEP,IAAI,CAACS,IAAL,CAAUC,YAAV,CAAuBC,QAAvB,CAAgCM,WAL/C,EAHJ,GADF,CAcD,CA/CD,CAiDA,cAAetB,CAAAA,UAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport { gql, useQuery } from \"@apollo/client\";\n\nimport List from \"./List\";\nimport SearchBar from \"./SearchBar\";\nimport ErrorHandler from \"./ErrorHandler\";\n\nconst GET_LIST = gql`\n  query($username: String! $cursor: String ) {\n    user( login: $username) {\n      repositories(first: 20, after: $cursor) {\n        totalCount\n        edges{\n          node {\n            ... on Repository {\n              name\n              url\n              description\n              updatedAt\n            }\n          }  \n        }\n        pageInfo {\n          hasNextPage\n          endCursor\n        }\n      }\n    }\n  }\n`;\n\nconst SearchPage = () => {\n  const [userName, setUserName] = useState(\"\");\n  const { data, fetchMore } = useQuery(GET_LIST, {\n    variables: { username: userName },\n  });\n\n  const handleSearch = (str) => {\n    setUserName(str);\n    fetchMore({\n      variables: {\n        username: str,\n      },\n      updateQuery: (prev, { fetchMoreResult }) => {\n        if (!fetchMoreResult) return prev;\n        return fetchMoreResult;\n      },\n    });\n  };\n\n  const handleMore = () => {\n    fetchMore({\n      variables: {\n        username: userName,\n        cursor: data.user.repositories.pageInfo.endCursor,\n      },\n      updateQuery: (prev, { fetchMoreResult }) => {\n        if (!fetchMoreResult) return prev;\n        return Object.assign({},prev,{...fetchMoreResult})\n      },\n    });\n  };\n\n\n  return (\n    <div>\n      <SearchBar onSearch={handleSearch} />\n      {data  && \n        <List\n          data={data.user.repositories.edges}\n          total={data.user.repositories.totalCount}\n          user={userName}\n          more={handleMore}\n          hasNextPage={data.user.repositories.pageInfo.hasNextPage}\n        />\n      }\n    </div>\n  );\n};\n\nexport default SearchPage;\n"]},"metadata":{},"sourceType":"module"}